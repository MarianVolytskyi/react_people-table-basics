{"version":3,"sources":["components/NavBar.tsx","api.ts","components/Loader/Loader.tsx","components/ErrorNoPeople.tsx","components/ErrorLoading.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/HomePage.tsx","components/ErrorPage.tsx","App.tsx","index.tsx"],"names":["Navbar","beActive","isActive","classNames","className","role","to","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","ErrorNoPeople","ErrorLoading","PeopleTable","visiblePeople","slug","useParams","map","person","onClick","sex","name","born","died","mother","motherName","father","fatherName","PeoplePage","useState","people","setPeople","error","setError","loading","setLoading","useEffect","catch","newError","finally","allPeople","useMemo","find","findPerson","length","HomePage","ErrorPage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.51b63c2c.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Navbar = () => {\n  const beActive = ({ isActive }:{ isActive:boolean }) => classNames(\n    'navbar-item', { 'has-background-grey-lighter': isActive },\n  );\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={beActive}>Home</NavLink>\n          <NavLink to=\"/people\" className={beActive}>People</NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export const ErrorNoPeople: React.FC = () => (\n  <p data-cy=\"noPeopleMessage\">\n    There are no people on the server\n  </p>\n);\n","export const ErrorLoading: React.FC = () => (\n  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n    Something went wrong\n  </p>\n);\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  visiblePeople :Person[];\n};\nexport const PeopleTable :React.FC<Props> = ({ visiblePeople }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visiblePeople.map(person => (\n          <tr\n            key={person.slug}\n            className={classNames({\n              'has-background-warning': person.slug === slug,\n            })}\n            data-cy=\"person\"\n          >\n            <td>\n              <Link\n                to={`/people/${person.slug}`}\n                onClick={() => person.slug === slug}\n                className={classNames({\n                  'has-text-danger': person.sex === 'f',\n                })}\n              >\n                {person.name}\n              </Link>\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {\n                person.mother?.slug ? (\n                  <Link\n                    to={`/people/${person.mother?.slug}`}\n                    className=\"has-text-danger\"\n                    onClick={() => slug === person.mother?.slug}\n                  >\n                    {person.mother?.name}\n                  </Link>\n                ) : (\n                  <p>{person.motherName ? person.motherName : '-'}</p>\n                )\n              }\n\n            </td>\n            <td>\n              {\n                person.father?.slug ? (\n                  <Link\n                    to={`/people/${person.father?.slug}`}\n                    onClick={() => slug === person.father?.slug}\n                  >\n                    {person.fatherName ? person.fatherName : '-'}\n                  </Link>\n                ) : (\n                  <p>{person.fatherName ? person.fatherName : '-'}</p>\n                )\n              }\n            </td>\n          </tr>\n\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\nimport { ErrorNoPeople } from './ErrorNoPeople';\nimport { ErrorLoading } from './ErrorLoading';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getPeople()\n      .then(setPeople)\n      .catch((newError) => {\n        setError(true);\n        throw newError;\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  const allPeople = useMemo(() => (\n    people.map(person => {\n      const mother = people.find(findPerson => (\n        findPerson.name === person.motherName\n      ));\n\n      const father = people.find(findPerson => (\n        findPerson.name === person.fatherName\n      ));\n\n      return { ...person, mother, father };\n    })\n  ), [people]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && <Loader />}\n\n          {error && <ErrorLoading />}\n\n          {!error && !loading && people.length === 0 && <ErrorNoPeople />}\n\n          {people.length !== 0 && !error\n          && <PeopleTable visiblePeople={allPeople} />}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const ErrorPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\n\nimport { Navbar } from './components/NavBar';\nimport { PeoplePage } from './components/PeoplePage';\nimport { HomePage } from './components/HomePage';\nimport { ErrorPage } from './components/ErrorPage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"*\" element={<ErrorPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}